import{r as o,j as e}from"./index-i_XjV6bq.js";import{g}from"./index-CH_iu5NA.js";class x{constructor(t){this.value=t,this.next=null,this.id=x.generateId()}static generateId(){return Math.random().toString(16).slice(2)}}class m{constructor(){this.head=null}insertAtEnd(t){if(!this.head){this.head=new x(t);return}let n=this.head;for(;n.next;)n=n.next;n.next=new x(t)}insertAtBeginning(t){const n=new x(t);n.next=this.head,this.head=n}insertAtPosition(t,n){const a=new x(t);if(n===0){this.insertAtBeginning(t);return}let i=this.head,r=0,d=null;for(;i&&r<n;)d=i,i=i.next,r++;r===n?(d.next=a,a.next=i):console.error("Invalid position")}deleteAtBeginning(){this.head&&(this.head=this.head.next)}deleteAtEnd(){if(!this.head)return;if(!this.head.next){this.head=null;return}let t=this.head;for(;t.next.next;)t=t.next;t.next=null}deleteAtPosition(t){if(!this.head)return;if(t===0){this.deleteAtBeginning();return}let n=this.head,a=0,i=null;for(;n&&a<t;)i=n,n=n.next,a++;a===t&&n?i.next=n.next:console.error("Invalid position")}toArray(){const t=[];let n=this.head;for(;n;)t.push({address:n.id,value:n.value,next:n.next?n.next.id:null}),n=n.next;return t}}const B=()=>{const l=o.useRef(new m),[t,n]=o.useState([]),[,a]=o.useState(0),i=o.useRef([]),[r,d]=o.useState(""),[u,c]=o.useState(""),h=()=>{a(s=>s+1)},p=()=>{i.current.forEach((s,j)=>{s&&g.fromTo(s,{opacity:0,y:-20},{opacity:1,y:0,duration:.5,delay:j*.2})})};o.useEffect(()=>{p()},[l.current.toArray().length]);const v=()=>{r.trim()!==""&&(l.current.insertAtBeginning(r),d(""),h())},f=()=>{r.trim()!==""&&(l.current.insertAtEnd(r),d(""),h())},k=()=>{r.trim()===""||u.trim()===""||(l.current.insertAtPosition(r,parseInt(u)),d(""),c(""),h())},A=()=>{l.current.deleteAtBeginning(),h(),d(""),c("")},N=()=>{l.current.deleteAtEnd(),h(),d(""),c("")},w=()=>{u.trim()!==""&&(l.current.deleteAtPosition(parseInt(u)),c(""),h())},b=async()=>{for(let s=0;s<i.current.length;s++)await g.to(i.current[s],{backgroundColor:"#e60000ff",duration:.6}),await g.to(i.current[s],{backgroundColor:"#83c5ff",duration:.6})},y=()=>{l.current=new m,i.current=[],d(""),c(""),a(s=>s+1)};return e.jsxs("section",{children:[e.jsxs("h1",{className:"linked-list",children:["Linked List ",e.jsx("span",{children:"Visualizer"})]}),e.jsxs("div",{className:"linked-list-main",children:[e.jsxs("div",{className:"linked-list-input",children:[e.jsx("input",{type:"number",placeholder:"Enter a number",value:r,onChange:s=>d(s.target.value)}),e.jsx("input",{type:"number",placeholder:"Enter a Position",value:u,onChange:s=>c(s.target.value)})]}),e.jsxs("div",{className:"linked-list-buttons",children:[e.jsx("button",{onClick:v,children:"Insert at Beginning"}),e.jsx("button",{onClick:f,children:"Insert at End"}),e.jsx("button",{onClick:k,children:"Insert at Position"}),e.jsx("button",{onClick:A,children:"Delete at Beginning"}),e.jsx("button",{onClick:N,children:"Delete at End"}),e.jsx("button",{onClick:w,children:"Delete at Position"}),e.jsx("button",{onClick:y,children:"reset"}),e.jsx("button",{onClick:b,children:"Traverse"})]}),e.jsx("div",{className:"linked-list-container",children:e.jsx("div",{className:"linked-list-display",children:l.current.toArray().map((s,j)=>e.jsxs("div",{className:"linked-list-node",ref:E=>i.current[j]=E,children:[e.jsx("div",{className:"value",children:s.value}),e.jsx("div",{className:"address",children:s.address}),s.next&&e.jsx("div",{className:"arrow",children:"→"})]},s.address))})}),e.jsxs("div",{className:"linkedlist-details",children:[e.jsxs("h2",{children:["About ",e.jsx("span",{id:"sp",children:"Linked List"})]}),e.jsxs("div",{className:"linkedlist-section",children:[e.jsx("h3",{children:"Definition:"}),e.jsxs("p",{children:["A ",e.jsx("strong",{children:"linked list"})," is a linear data structure where elements are stored in nodes, and each node points to the next using a reference (pointer). It does ",e.jsx("strong",{children:"not require contiguous memory"})," allocation."]})]}),e.jsxs("div",{className:"linkedlist-section",children:[e.jsx("h3",{children:"Basic Operations:"}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"insertAtBeginning(x)"})," – Inserts ",e.jsx("code",{children:"x"})," at the beginning"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"insertAtEnd(x)"})," – Appends ",e.jsx("code",{children:"x"})," at the end"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"insertAtPosition(x, pos)"})," – Inserts ",e.jsx("code",{children:"x"})," at a given position"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"deleteAtBeginning()"})," – Removes the first node"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"deleteAtEnd()"})," – Removes the last node"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"deleteAtPosition(pos)"})," – Deletes node at a given position"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"traverse()"})," – Traverses the list from head to end"]})]})]}),e.jsxs("div",{className:"linkedlist-section",children:[e.jsx("h3",{children:"Time Complexities:"}),e.jsxs("ul",{children:[e.jsxs("li",{children:[e.jsx("strong",{children:"Insertion at Beginning:"})," O(1)"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Insertion at End:"})," O(n)"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Insertion at Position:"})," O(n)"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Deletion at Beginning:"})," O(1)"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Deletion at End:"})," O(n)"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Traversal:"})," O(n)"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"Search:"})," O(n)"]})]})]}),e.jsxs("div",{className:"linkedlist-section",children:[e.jsx("h3",{children:"Advantages:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Dynamic size – grows and shrinks as needed"}),e.jsx("li",{children:"Efficient insertion/deletion at beginning"}),e.jsx("li",{children:"No memory wastage due to non-contiguous allocation"})]})]}),e.jsxs("div",{className:"linkedlist-section",children:[e.jsx("h3",{children:"Disadvantages:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Random access not allowed (O(n) traversal)"}),e.jsx("li",{children:"Extra memory per node (for pointer)"}),e.jsx("li",{children:"More complex than arrays for implementation"})]})]}),e.jsxs("div",{className:"linkedlist-section",children:[e.jsx("h3",{children:"Memory Usage:"}),e.jsxs("p",{children:[e.jsx("strong",{children:"Space Complexity:"})," O(n)"]})]})]})]})]})};export{B as default};
